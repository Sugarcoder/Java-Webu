// Inheritance-related Keywords


abstract    // the item cannot be realized in the current class, but can be if the object is extended. 
			// 'abstract' cannot be used with 'final'.



// Abstract classes

public abstract class ABC {...}    

/* Cannot instantiate an object from an abstract class, 
but still can create a reference variable where the type is in the class. */


// Abstract methods 

public abstract String getPayInfo();

// You can extend a class with an abstract method without overriding the method




/****************************/


final    // used to mark something that cannot be changed 



// Final classes

public final class ABC {...}


// Final methods 

public final void display() {...}



// Final properties = markes the field as a constant

public static final int MAX = 100; 


// A 'final' value can be initialized in a constructor or initializer.


public final double readConstant = Math.random();   
// OR  
public final double readConstant; 
readConstant = Math.random();

